---
- name: Add arm64 architecture to dpkg if default architecture is set to aarch64
  ansible.builtin.lineinfile:
    create: true
    state: present
    line: arm64
    dest: /var/lib/dpkg/arch
  when: ansible_architecture == 'aarch64'

- name: Add GlusterFS GPG apt key
  ansible.builtin.apt_key:
    url: https://download.gluster.org/pub/gluster/glusterfs/7/rsa.pub
    state: present

- name: Add GlusterFS repository
  ansible.builtin.apt_repository:
    repo: ppa:gluster/glusterfs-7
    codename: bionic
    state: present

- name: Update apt cache and packages
  ansible.builtin.apt:
    update_cache: "yes"
    autoclean: "yes"
    autoremove: "yes"
    upgrade: dist

- name: Install GlusterFS server and client
  ansible.builtin.apt:
    pkg:
      - glusterfs-server
      - glusterfs-client
      - glusterfs-common

- name: Enable glusterd
  ansible.builtin.systemd:
    name: glusterd
    enabled: true
    masked: false
    state: started

- name: Add Docker's APT repository
  ansible.builtin.apt_repository:
    repo: deb [arch=arm64] https://download.docker.com/linux/debian bookworm stable
    state: present
    filename: docker

- name: Install Docker
  ansible.builtin.apt:
    name: docker
    state: present
    update_cache: true

- name: Install Docker Compose
  ansible.builtin.apt:
    name: docker-compose
    state: present
    update_cache: true

- name: Run whoami without become.
  ansible.builtin.command: whoami
  changed_when: false
  become: false
  register: whoami

- name: Set a fact with the user name.
  ansible.builtin.set_fact:
    login_user: "{{ whoami.stdout }}"

- name: Add the current user to 'docker' group
  become: true
  ansible.builtin.user:
    name: "{{ whoami.stdout }}"
    groups: docker
    append: true

- name: Reset SSH connection to refresh user groups
  ansible.builtin.meta: reset_connection
